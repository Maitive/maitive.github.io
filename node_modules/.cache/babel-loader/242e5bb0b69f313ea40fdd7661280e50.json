{"ast":null,"code":"import { Component, createContext, createElement, forwardRef, useContext, useRef } from 'react';\nimport { driver, getInitialStyle } from 'styletron-standard';\n/* eslint-env browser */\n\n/* global module */\n\nfunction addDebugMetadata(instance, stackIndex) {\n  var _ref = new Error(\"stacktrace source\"),\n      stack = _ref.stack,\n      stacktrace = _ref.stacktrace,\n      message = _ref.message;\n\n  instance.debug = {\n    stackInfo: {\n      stack: stack,\n      stacktrace: stacktrace,\n      message: message\n    },\n    stackIndex: stackIndex\n  };\n} // DEVTOOLS SETUP\n\n\nvar setupDevtoolsExtension = function setupDevtoolsExtension() {\n  var atomicMap = {};\n  var extensionsMap = new Map();\n  var stylesMap = new Map();\n\n  var getStyles = function getStyles(className) {\n    var styles = {};\n\n    if (typeof className !== \"string\") {\n      return styles;\n    }\n\n    if (stylesMap.has(className)) {\n      styles.styles = stylesMap.get(className);\n      var classList = className.split(\" \");\n\n      if (classList.length) {\n        var classes = {};\n        classList.forEach(function (singleClassName) {\n          classes[singleClassName] = atomicMap[singleClassName];\n        });\n        styles.classes = classes;\n      }\n\n      if (extensionsMap.has(className)) {\n        var extension = extensionsMap.get(className);\n        styles.extends = extension;\n      }\n\n      return styles;\n    }\n  };\n\n  window.__STYLETRON_DEVTOOLS__ = {\n    atomicMap: atomicMap,\n    extensionsMap: extensionsMap,\n    stylesMap: stylesMap,\n    getStyles: getStyles\n  };\n};\n\nvar BrowserDebugEngine = /*#__PURE__*/function () {\n  function BrowserDebugEngine(worker) {\n    if (!worker) {\n      var workerBlob = new Blob([\"importScripts(\\\"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/worker.js\\\")\"], {\n        type: \"application/javascript\"\n      });\n      worker = new Worker(URL.createObjectURL(workerBlob));\n      worker.postMessage({\n        id: \"init_wasm\",\n        url: \"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/mappings.wasm\"\n      });\n      worker.postMessage({\n        id: \"set_render_interval\",\n        interval: 120\n      });\n\n      if (module.hot) {\n        module.hot.addStatusHandler(function (status) {\n          if (status === \"dispose\") {\n            worker.postMessage({\n              id: \"invalidate\"\n            });\n          }\n        });\n      }\n    }\n\n    this.worker = worker;\n    this.counter = 0;\n\n    this.worker.onmessage = function (msg) {\n      var _msg$data = msg.data,\n          id = _msg$data.id,\n          css = _msg$data.css;\n\n      if (id === \"render_css\" && css) {\n        var style = document.createElement(\"style\");\n        style.appendChild(document.createTextNode(css));\n        document.head.appendChild(style);\n      }\n    };\n  }\n\n  var _proto = BrowserDebugEngine.prototype;\n\n  _proto.debug = function debug(_ref2) {\n    var stackIndex = _ref2.stackIndex,\n        stackInfo = _ref2.stackInfo;\n    var className = \"__debug-\" + this.counter++;\n    this.worker.postMessage({\n      id: \"add_mapped_class\",\n      className: className,\n      stackInfo: stackInfo,\n      stackIndex: stackIndex\n    });\n    return className;\n  };\n\n  return BrowserDebugEngine;\n}();\n\nvar DebugEngine = BrowserDebugEngine;\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/* eslint-env browser */\n\n/* eslint-disable no-unused-vars, no-redeclare, no-shadow */\n\n\nvar noopEngine = {\n  renderStyle: function renderStyle() {\n    return \"\";\n  },\n  renderKeyframes: function renderKeyframes() {\n    return \"\";\n  },\n  renderFontFace: function renderFontFace() {\n    return \"\";\n  }\n};\nvar StyletronContext = createContext(noopEngine);\nvar HydrationContext = createContext(false);\nvar DebugEngineContext = createContext();\nvar ThemeContext = createContext();\n\nvar DevProvider = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DevProvider, _React$Component);\n\n  function DevProvider(props) {\n    var _this;\n\n    _this = _React$Component.call(this) || this;\n    _this.state = {\n      hydrating: Boolean(props.debugAfterHydration)\n    };\n    return _this;\n  }\n\n  var _proto = DevProvider.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    {\n      if (this.state.hydrating === true) {\n        this.setState({\n          hydrating: false\n        });\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    return createElement(StyletronContext.Provider, {\n      value: this.props.value\n    }, createElement(DebugEngineContext.Provider, {\n      value: this.props.debug\n    }, createElement(HydrationContext.Provider, {\n      value: this.state.hydrating\n    }, this.props.children)));\n  };\n\n  return DevProvider;\n}(Component);\n\nvar Provider = true && process.env.NODE_ENV !== \"production\" ? DevProvider : StyletronContext.Provider;\n\nif (true && process.env.NODE_ENV !== \"production\" && !window.__STYLETRON_DEVTOOLS__) {\n  setupDevtoolsExtension();\n}\n\nfunction checkNoopEngine(engine) {\n  // if no engine provided, we default to no-op, handy for tests\n  // however, print a warning in other envs\n  if (process.env.NODE_ENV !== \"test\") {\n    engine === noopEngine && // eslint-disable-next-line no-console\n    console.warn(process.env.NODE_ENV !== \"production\" ? \"\\nStyletron has been switched to a no-op (test) mode.\\n\\nA Styletron styled component was rendered, but no Styletron engine instance was provided in React context.\\n\\nDid you forget to provide a Styletron engine instance to React context via using the Styletron provider component?\\n\\nNote: Providers and Consumers must come from the exact same React.createContext call to work.\\nIf your app has multiple instances of the \\\"styletron-react\\\" package in your node_module tree,\\nyour Provider may be coming from a different React.createContext call, which means the styled components\\nwill not recieve the provided engine instance. This scenario can arise, for example, when using \\\"npm link\\\".\\n\" : \"Styletron Provider is not set up. Defaulting to no-op.\");\n  }\n}\n\nfunction useStyletron() {\n  var styletronEngine = useContext(StyletronContext);\n  var debugEngine = useContext(DebugEngineContext);\n  var hydrating = useContext(HydrationContext);\n  checkNoopEngine(styletronEngine);\n  var debugClassName = useRef(\"\");\n  var prevDebugClassNameDeps = useRef([]);\n  return [function css(style) {\n    var className = driver(style, styletronEngine);\n\n    if (!(true && process.env.NODE_ENV !== \"production\")) {\n      return className;\n    }\n\n    var _ref = new Error(\"stacktrace source\"),\n        stack = _ref.stack,\n        message = _ref.message;\n\n    var nextDeps = [debugEngine, hydrating];\n\n    if (prevDebugClassNameDeps.current[0] !== nextDeps[0] || prevDebugClassNameDeps.current[1] !== nextDeps[1]) {\n      if (debugEngine && !hydrating) {\n        debugClassName.current = debugEngine.debug({\n          stackInfo: {\n            stack: stack,\n            message: message\n          },\n          stackIndex: 1\n        });\n      }\n\n      prevDebugClassNameDeps.current = nextDeps;\n    }\n\n    if (debugClassName.current) {\n      return debugClassName.current + \" \" + className;\n    }\n\n    return className;\n  }];\n}\n\nfunction createStyled(_ref2) {\n  var getInitialStyle$$1 = _ref2.getInitialStyle,\n      driver$$1 = _ref2.driver,\n      wrapper = _ref2.wrapper;\n\n  function styled(base, styleArg) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (base.__STYLETRON__) {\n        /* eslint-disable no-console */\n        console.warn(\"It appears you are passing a styled component into `styled`.\");\n        console.warn(\"For composition with existing styled components, use `withStyle` or `withTransform` instead.\");\n        /* eslint-enable no-console */\n      }\n    }\n\n    var baseStyletron = {\n      reducers: [],\n      base: base,\n      driver: driver$$1,\n      getInitialStyle: getInitialStyle$$1,\n      wrapper: wrapper\n    };\n\n    if (true && process.env.NODE_ENV !== \"production\") {\n      addDebugMetadata(baseStyletron, 2);\n    }\n\n    return createStyledElementComponent(autoComposeShallow(baseStyletron, styleArg));\n  }\n\n  return styled;\n}\n\nvar styled = createStyled({\n  getInitialStyle: getInitialStyle,\n  driver: driver,\n  wrapper: function wrapper(Component$$1) {\n    return Component$$1;\n  }\n});\n\nfunction withTransform(component, transformer) {\n  var styletron = component.__STYLETRON__;\n\n  if (true && process.env.NODE_ENV !== \"production\") {\n    addDebugMetadata(styletron, 2);\n  }\n\n  return createStyledElementComponent(composeDynamic(styletron, transformer));\n}\n\nvar withStyle = withStyleDeep;\n\nfunction withStyleDeep(component, styleArg) {\n  var styletron = component.__STYLETRON__;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!styletron) {\n      /* eslint-disable no-console */\n      console.warn(\"The first parameter to `withStyle` must be a styled component (without extra wrappers).\");\n      /* eslint-enable no-console */\n    }\n  }\n\n  if (true && process.env.NODE_ENV !== \"production\") {\n    addDebugMetadata(styletron, 2);\n    return createStyledElementComponent(addExtension(autoComposeDeep(styletron, styleArg), component, styleArg));\n  } else {\n    return createStyledElementComponent(autoComposeDeep(styletron, styleArg));\n  }\n}\n\nfunction withWrapper(component, wrapper) {\n  var styletron = component.__STYLETRON__;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!styletron) {\n      /* eslint-disable no-console */\n      console.warn(\"The first parameter to `withWrapper` must be a styled component (without extra wrappers).\");\n      /* eslint-enable no-console */\n    }\n  }\n\n  var composed = {\n    getInitialStyle: styletron.getInitialStyle,\n    base: styletron.base,\n    driver: styletron.driver,\n    wrapper: wrapper,\n    reducers: styletron.reducers\n  };\n\n  if (true && process.env.NODE_ENV !== \"production\") {\n    addDebugMetadata(composed, 2);\n  }\n\n  return createStyledElementComponent(composed);\n}\n\nfunction autoComposeShallow(styletron, styleArg) {\n  if (typeof styleArg === \"function\") {\n    return dynamicComposeShallow(styletron, styleArg);\n  }\n\n  return staticComposeShallow(styletron, styleArg);\n}\n\nfunction addExtension(composed, component, styleArg) {\n  return Object.assign({}, composed, {\n    ext: {\n      with: styleArg,\n      name: component.displayName,\n      base: component.__STYLETRON__.base,\n      getInitialStyle: component.__STYLETRON__.reducers.length ? component.__STYLETRON__.reducers[0].reducer : component.__STYLETRON__.getInitialStyle\n    }\n  });\n}\n\nfunction autoComposeDeep(styletron, styleArg) {\n  if (typeof styleArg === \"function\") {\n    return dynamicComposeDeep(styletron, styleArg);\n  }\n\n  return staticComposeDeep(styletron, styleArg);\n}\n\nfunction staticComposeShallow(styletron, style) {\n  return composeStatic(styletron, createShallowMergeReducer(style));\n}\n\nfunction staticComposeDeep(styletron, style) {\n  return composeStatic(styletron, createDeepMergeReducer(style));\n}\n\nfunction dynamicComposeShallow(styletron, styleFn) {\n  return composeDynamic(styletron, function (style, props) {\n    return shallowMerge(style, styleFn(props));\n  });\n}\n\nfunction dynamicComposeDeep(styletron, styleFn) {\n  return composeDynamic(styletron, function (style, props) {\n    return deepMerge(style, styleFn(props));\n  });\n}\n\nfunction createShallowMergeReducer(style) {\n  return {\n    reducer: function reducer(inputStyle) {\n      return shallowMerge(inputStyle, style);\n    },\n    assignmentCommutative: true,\n    factory: createShallowMergeReducer,\n    style: style\n  };\n}\n\nfunction createDeepMergeReducer(style) {\n  return {\n    reducer: function reducer(inputStyle) {\n      return deepMerge(inputStyle, style);\n    },\n    assignmentCommutative: true,\n    factory: createDeepMergeReducer,\n    style: style\n  };\n}\n\nfunction composeStatic(styletron, reducerContainer) {\n  if (styletron.reducers.length === 0) {\n    var style = reducerContainer.reducer(styletron.getInitialStyle());\n    var result = {\n      reducers: styletron.reducers,\n      base: styletron.base,\n      driver: styletron.driver,\n      wrapper: styletron.wrapper,\n      getInitialStyle: function getInitialStyle$$1() {\n        return style;\n      }\n    };\n\n    if (true && process.env.NODE_ENV !== \"production\") {\n      result.debug = styletron.debug;\n    }\n\n    return result;\n  } else {\n    var last = styletron.reducers[0];\n\n    if (last.assignmentCommutative === true && reducerContainer.assignmentCommutative === true) {\n      var composed = reducerContainer.reducer(last.style);\n      var _result = {\n        getInitialStyle: styletron.getInitialStyle,\n        base: styletron.base,\n        driver: styletron.driver,\n        wrapper: styletron.wrapper,\n        reducers: [last.factory(composed)].concat(styletron.reducers.slice(1))\n      };\n\n      if (true && process.env.NODE_ENV !== \"production\") {\n        _result.debug = styletron.debug;\n      }\n\n      return _result;\n    }\n\n    return composeDynamic(styletron, reducerContainer.reducer);\n  }\n}\n\nfunction composeDynamic(styletron, reducer) {\n  var composed = {\n    getInitialStyle: styletron.getInitialStyle,\n    base: styletron.base,\n    driver: styletron.driver,\n    wrapper: styletron.wrapper,\n    reducers: [{\n      assignmentCommutative: false,\n      reducer: reducer\n    }].concat(styletron.reducers)\n  };\n\n  if (true && process.env.NODE_ENV !== \"production\") {\n    composed.debug = styletron.debug;\n  }\n\n  return composed;\n}\n\nfunction createStyledElementComponent(styletron) {\n  var reducers = styletron.reducers,\n      base = styletron.base,\n      driver$$1 = styletron.driver,\n      wrapper = styletron.wrapper,\n      getInitialStyle$$1 = styletron.getInitialStyle,\n      ext = styletron.ext;\n\n  if (true && process.env.NODE_ENV !== \"production\") {\n    var debugStackInfo, debugStackIndex;\n\n    if (styletron.debug) {\n      debugStackInfo = styletron.debug.stackInfo;\n      debugStackIndex = styletron.debug.stackIndex;\n    }\n  }\n\n  if (true && process.env.NODE_ENV !== \"production\") {\n    var debugClassName;\n  }\n\n  var StyledElement = forwardRef(function (props, ref) {\n    var styletron = useContext(StyletronContext);\n    var debugEngine = useContext(DebugEngineContext);\n    var hydrating = useContext(HydrationContext);\n    checkNoopEngine(styletron);\n    var elementProps = omitPrefixedKeys(props);\n    var style = resolveStyle(getInitialStyle$$1, reducers, props);\n\n    if (props.$style) {\n      if (typeof props.$style === \"function\") {\n        style = deepMerge(style, props.$style(props));\n      } else {\n        style = deepMerge(style, props.$style);\n      }\n    }\n\n    var styleClassString = driver$$1(style, styletron);\n    var Element = props.$as ? props.$as : base;\n    elementProps.className = props.className ? props.className + \" \" + styleClassString : styleClassString;\n\n    if (true && process.env.NODE_ENV !== \"production\" && debugEngine && !hydrating) {\n      if (!debugClassName) {\n        debugClassName = debugEngine.debug({\n          stackInfo: debugStackInfo,\n          stackIndex: debugStackIndex\n        });\n      }\n\n      var joined = debugClassName + \" \" + elementProps.className;\n      elementProps.className = joined;\n    }\n\n    if (true && process.env.NODE_ENV !== \"production\" && window.__STYLETRON_DEVTOOLS__) {\n      window.__STYLETRON_DEVTOOLS__.stylesMap.set(elementProps.className, style);\n\n      if (ext) {\n        window.__STYLETRON_DEVTOOLS__.extensionsMap.set(elementProps.className, {\n          base: ext.base,\n          displayName: ext.name,\n          initialStyles: ext.getInitialStyle({}, props),\n          styleOverrides: typeof ext.with === \"function\" ? ext.with(props) : ext.with\n        });\n      }\n    }\n\n    if (props.$ref) {\n      // eslint-disable-next-line no-console\n      console.warn(\"The prop `$ref` has been deprecated. Use `ref` instead. Refs are now forwarded with React.forwardRef.\");\n    }\n\n    return createElement(Element, _extends({}, elementProps, {\n      ref: ref || props.$ref\n    }));\n  });\n  var Wrapped = wrapper(StyledElement);\n  Wrapped.__STYLETRON__ = {\n    base: base,\n    reducers: reducers,\n    driver: driver$$1,\n    wrapper: wrapper,\n    getInitialStyle: getInitialStyle$$1\n  };\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var displayName;\n\n    if (typeof base === \"string\") {\n      displayName = base;\n    } else if (base.displayName) {\n      displayName = base.displayName;\n    } else if (base.name) {\n      displayName = base.name;\n    } else {\n      displayName = \"Unknown\";\n    }\n\n    Wrapped.displayName = \"Styled(\" + displayName + \")\";\n  }\n\n  return Wrapped;\n} // Utility functions\n\n\nfunction resolveStyle(getInitialStyle$$1, reducers, props) {\n  var result = getInitialStyle$$1();\n  var i = reducers.length;\n\n  while (i--) {\n    // Cast to allow passing unused props param in case of static reducer\n    var reducer = reducers[i].reducer;\n    result = reducer(result, props);\n  }\n\n  return result;\n}\n\nfunction isObject(x) {\n  return _typeof(x) === \"object\" && x !== null;\n}\n\nfunction omitPrefixedKeys(source) {\n  var result = {};\n\n  for (var key in source) {\n    if (key[0] !== \"$\") {\n      result[key] = source[key];\n    }\n  }\n\n  return result;\n}\n\nfunction deepMerge(a, b) {\n  var result = assign({}, a);\n\n  for (var key in b) {\n    var val = b[key];\n\n    if (isObject(val) && isObject(a[key])) {\n      result[key] = deepMerge(a[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  return result;\n}\n\nfunction shallowMerge(a, b) {\n  return assign(assign({}, a), b);\n}\n\nfunction assign(target, source) {\n  for (var key in source) {\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nexport { DebugEngine, Provider, useStyletron, createStyled, styled, withTransform, withStyle, withStyleDeep, withWrapper, autoComposeShallow, autoComposeDeep, staticComposeShallow, staticComposeDeep, dynamicComposeShallow, dynamicComposeDeep, createShallowMergeReducer, createDeepMergeReducer, composeStatic, composeDynamic, createStyledElementComponent, resolveStyle };","map":{"version":3,"mappings":"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","names":["addDebugMetadata","instance","stackIndex","Error","stack","stacktrace","message","debug","setupDevtoolsExtension","atomicMap","extensionsMap","Map","stylesMap","getStyles","styles","className","has","get","classList","split","length","classes","forEach","singleClassName","extension","extends","__STYLETRON_DEVTOOLS__","BrowserDebugEngine","worker","workerBlob","Blob","Worker","URL","createObjectURL","postMessage","module","hot","addStatusHandler","status","counter","onmessage","msg","data","id","css","style","document","createElement","appendChild","createTextNode","head","stackInfo","DebugEngine","noopEngine","StyletronContext","React","HydrationContext","DebugEngineContext","ThemeContext","DevProvider","props","state","Boolean","debugAfterHydration","componentDidMount","hydrating","setState","render","React.createElement","Provider","value","children","window","checkNoopEngine","engine","process","env","NODE_ENV","warn","useStyletron","styletronEngine","debugEngine","debugClassName","prevDebugClassNameDeps","driver","nextDeps","current","createStyled","_ref2","getInitialStyle","wrapper","styled","base","styleArg","__STYLETRON__","baseStyletron","createStyledElementComponent","autoComposeShallow","Component","withTransform","component","transformer","styletron","composeDynamic","withStyle","withStyleDeep","addExtension","autoComposeDeep","withWrapper","composed","reducers","dynamicComposeShallow","staticComposeShallow","displayName","reducer","dynamicComposeDeep","staticComposeDeep","composeStatic","createShallowMergeReducer","createDeepMergeReducer","styleFn","shallowMerge","deepMerge","inputStyle","reducerContainer","result","last","assignmentCommutative","factory","concat","slice","ext","debugStackInfo","debugStackIndex","StyledElement","ref","elementProps","omitPrefixedKeys","resolveStyle","$style","styleClassString","Element","$as","joined","set","name","with","$ref","Wrapped","i","isObject","x","_typeof","source","key","a","b","assign","val","target"],"sources":["/home/lenovo/Downloads/Mative-Pro-main/node_modules/styletron-react/src/dev-tool.js","/home/lenovo/Downloads/Mative-Pro-main/node_modules/styletron-react/src/index.js"],"sourcesContent":["/* eslint-env browser */\n/* global module */\n\nexport function addDebugMetadata(instance, stackIndex) {\n  const {stack, stacktrace, message} = new Error(\"stacktrace source\");\n  instance.debug = {\n    stackInfo: {stack, stacktrace, message},\n    stackIndex: stackIndex,\n  };\n}\n\n// DEVTOOLS SETUP\ntype StyletronStyles = {\n  classes?: any,\n  styles?: any,\n  extends?: any,\n};\nexport const setupDevtoolsExtension = () => {\n  const atomicMap = {};\n  const extensionsMap = new Map();\n  const stylesMap = new Map();\n  const getStyles: StyletronStyles = className => {\n    const styles: StyletronStyles = {};\n    if (typeof className !== \"string\") {\n      return styles;\n    }\n    if (stylesMap.has(className)) {\n      styles.styles = stylesMap.get(className);\n      const classList = className.split(\" \");\n      if (classList.length) {\n        const classes = {};\n        classList.forEach(singleClassName => {\n          classes[singleClassName] = atomicMap[singleClassName];\n        });\n        styles.classes = classes;\n      }\n      if (extensionsMap.has(className)) {\n        const extension = extensionsMap.get(className);\n        styles.extends = extension;\n      }\n      return styles;\n    }\n  };\n  window.__STYLETRON_DEVTOOLS__ = {\n    atomicMap,\n    extensionsMap,\n    stylesMap,\n    getStyles,\n  };\n};\n\nclass BrowserDebugEngine {\n  constructor(worker) {\n    if (!worker) {\n      const workerBlob = new Blob(\n        [\n          `importScripts(\"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/worker.js\")`,\n        ],\n        {type: \"application/javascript\"},\n      );\n      worker = new Worker(URL.createObjectURL(workerBlob));\n      worker.postMessage({\n        id: \"init_wasm\",\n        url: \"https://unpkg.com/css-to-js-sourcemap-worker@2.0.5/mappings.wasm\",\n      });\n      worker.postMessage({\n        id: \"set_render_interval\",\n        interval: 120,\n      });\n      if (module.hot) {\n        module.hot.addStatusHandler(status => {\n          if (status === \"dispose\") {\n            worker.postMessage({id: \"invalidate\"});\n          }\n        });\n      }\n    }\n    this.worker = worker;\n    this.counter = 0;\n    this.worker.onmessage = msg => {\n      const {id, css} = msg.data;\n      if (id === \"render_css\" && css) {\n        const style = document.createElement(\"style\");\n        style.appendChild(document.createTextNode(css));\n        document.head.appendChild(style);\n      }\n    };\n  }\n\n  debug({stackIndex, stackInfo}) {\n    const className = `__debug-${this.counter++}`;\n    this.worker.postMessage({\n      id: \"add_mapped_class\",\n      className,\n      stackInfo,\n      stackIndex,\n    });\n    return className;\n  }\n}\n\nclass NoopDebugEngine {\n  debug() {}\n}\n\nexport const DebugEngine = __BROWSER__ ? BrowserDebugEngine : NoopDebugEngine;\n","// @flow\n/* eslint-env browser */\n/* eslint-disable no-unused-vars, no-redeclare, no-shadow */\n\ndeclare var __DEV__: boolean;\ndeclare var __BROWSER__: boolean;\ndeclare var process: any;\n\nimport * as React from \"react\";\nimport {\n  driver,\n  getInitialStyle,\n  type StandardEngine,\n  type StyleObject,\n} from \"styletron-standard\";\n\nimport type {\n  Styletron,\n  StyletronComponent,\n  ReducerContainer,\n  AssignmentCommutativeReducerContainer,\n  NonAssignmentCommutativeReducerContainer,\n  StyledFn,\n  WithStyleFn,\n  WithTransformFn,\n  WithWrapperFn,\n} from \"./types.js\";\nimport {\n  addDebugMetadata,\n  setupDevtoolsExtension,\n  DebugEngine,\n} from \"./dev-tool.js\";\n\nexport {DebugEngine};\nexport type {StyleObject};\n\nconst noopEngine = {\n  renderStyle: () => \"\",\n  renderKeyframes: () => \"\",\n  renderFontFace: () => \"\",\n};\n\nconst StyletronContext = React.createContext<StandardEngine>(noopEngine);\nconst HydrationContext = React.createContext(false);\nconst DebugEngineContext = React.createContext();\nconst ThemeContext = React.createContext();\n\ntype DevProviderProps = {\n  children: React.Node,\n  value: StandardEngine,\n  debugAfterHydration?: boolean,\n  debug?: any,\n};\n\nclass DevProvider extends React.Component<\n  DevProviderProps,\n  {hydrating: boolean},\n> {\n  constructor(props: DevProviderProps) {\n    super();\n    this.state = {\n      hydrating: Boolean(props.debugAfterHydration),\n    };\n  }\n\n  componentDidMount() {\n    if (__BROWSER__) {\n      if (this.state.hydrating === true) {\n        this.setState({\n          hydrating: false,\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <StyletronContext.Provider value={this.props.value}>\n        <DebugEngineContext.Provider value={this.props.debug}>\n          <HydrationContext.Provider value={this.state.hydrating}>\n            {this.props.children}\n          </HydrationContext.Provider>\n        </DebugEngineContext.Provider>\n      </StyletronContext.Provider>\n    );\n  }\n}\n\nexport const Provider =\n  __BROWSER__ && __DEV__ ? DevProvider : StyletronContext.Provider;\n\nif (__BROWSER__ && __DEV__ && !window.__STYLETRON_DEVTOOLS__) {\n  setupDevtoolsExtension();\n}\ntype createStyledOpts = {\n  getInitialStyle: () => StyleObject,\n  driver: typeof driver,\n  wrapper: (\n    React.StatelessFunctionalComponent<any>,\n  ) => React.ComponentType<any>,\n};\n\nfunction checkNoopEngine(engine: StandardEngine) {\n  // if no engine provided, we default to no-op, handy for tests\n  // however, print a warning in other envs\n  if (process.env.NODE_ENV !== \"test\") {\n    engine === noopEngine &&\n      // eslint-disable-next-line no-console\n      console.warn(\n        __DEV__\n          ? `\nStyletron has been switched to a no-op (test) mode.\n\nA Styletron styled component was rendered, but no Styletron engine instance was provided in React context.\n\nDid you forget to provide a Styletron engine instance to React context via using the Styletron provider component?\n\nNote: Providers and Consumers must come from the exact same React.createContext call to work.\nIf your app has multiple instances of the \"styletron-react\" package in your node_module tree,\nyour Provider may be coming from a different React.createContext call, which means the styled components\nwill not recieve the provided engine instance. This scenario can arise, for example, when using \"npm link\".\n`\n          : `Styletron Provider is not set up. Defaulting to no-op.`,\n      );\n  }\n}\n\nexport function useStyletron() {\n  const styletronEngine: StandardEngine = React.useContext(StyletronContext);\n  const debugEngine = React.useContext(DebugEngineContext);\n  const hydrating = React.useContext(HydrationContext);\n  checkNoopEngine(styletronEngine);\n\n  const debugClassName = React.useRef(\"\");\n  const prevDebugClassNameDeps = React.useRef([]);\n\n  return [\n    function css(style: StyleObject) {\n      const className = driver(style, styletronEngine);\n      if (!(__BROWSER__ && __DEV__)) {\n        return className;\n      }\n      const {stack, message} = new Error(\"stacktrace source\");\n\n      const nextDeps = [debugEngine, hydrating];\n      if (\n        prevDebugClassNameDeps.current[0] !== nextDeps[0] ||\n        prevDebugClassNameDeps.current[1] !== nextDeps[1]\n      ) {\n        if (debugEngine && !hydrating) {\n          debugClassName.current = debugEngine.debug({\n            stackInfo: {stack, message},\n            stackIndex: 1,\n          });\n        }\n        prevDebugClassNameDeps.current = nextDeps;\n      }\n\n      if (debugClassName.current) {\n        return `${debugClassName.current} ${className}`;\n      }\n\n      return className;\n    },\n  ];\n}\n\nexport function createStyled({\n  getInitialStyle,\n  driver,\n  wrapper,\n}: createStyledOpts): StyledFn {\n  function styled(base: any, styleArg) {\n    if (__DEV__) {\n      if (base.__STYLETRON__) {\n        /* eslint-disable no-console */\n        console.warn(\n          \"It appears you are passing a styled component into `styled`.\",\n        );\n        console.warn(\n          \"For composition with existing styled components, use `withStyle` or `withTransform` instead.\",\n        );\n        /* eslint-enable no-console */\n      }\n    }\n\n    const baseStyletron: Styletron = {\n      reducers: [],\n      base: base,\n      driver,\n      getInitialStyle,\n      wrapper,\n    };\n\n    if (__BROWSER__ && __DEV__) {\n      addDebugMetadata(baseStyletron, 2);\n    }\n\n    return createStyledElementComponent(\n      autoComposeShallow(baseStyletron, styleArg),\n    );\n  }\n\n  return styled;\n}\n\nexport const styled: StyledFn = createStyled({\n  getInitialStyle,\n  driver,\n  wrapper: Component => Component,\n});\n\ndeclare var withTransform: WithTransformFn;\nexport function withTransform(component, transformer) {\n  const styletron = component.__STYLETRON__;\n\n  if (__BROWSER__ && __DEV__) {\n    addDebugMetadata(styletron, 2);\n  }\n\n  return createStyledElementComponent(composeDynamic(styletron, transformer));\n}\n\ndeclare var withStyle: WithStyleFn;\nexport var withStyle = withStyleDeep;\n\ndeclare var withStyleDeep: WithStyleFn;\nexport function withStyleDeep(component, styleArg) {\n  const styletron = component.__STYLETRON__;\n\n  if (__DEV__) {\n    if (!styletron) {\n      /* eslint-disable no-console */\n      console.warn(\n        \"The first parameter to `withStyle` must be a styled component (without extra wrappers).\",\n      );\n      /* eslint-enable no-console */\n    }\n  }\n\n  if (__BROWSER__ && __DEV__) {\n    addDebugMetadata(styletron, 2);\n    return createStyledElementComponent(\n      addExtension(autoComposeDeep(styletron, styleArg), component, styleArg),\n    );\n  } else {\n    return createStyledElementComponent(autoComposeDeep(styletron, styleArg));\n  }\n}\n\ndeclare var withWrapper: WithWrapperFn;\nexport function withWrapper(component, wrapper) {\n  const styletron = component.__STYLETRON__;\n\n  if (__DEV__) {\n    if (!styletron) {\n      /* eslint-disable no-console */\n      console.warn(\n        \"The first parameter to `withWrapper` must be a styled component (without extra wrappers).\",\n      );\n      /* eslint-enable no-console */\n    }\n  }\n\n  const composed = {\n    getInitialStyle: styletron.getInitialStyle,\n    base: styletron.base,\n    driver: styletron.driver,\n    wrapper: wrapper,\n    reducers: styletron.reducers,\n  };\n\n  if (__BROWSER__ && __DEV__) {\n    addDebugMetadata(composed, 2);\n  }\n\n  return createStyledElementComponent(composed);\n}\n\nexport function autoComposeShallow<Props>(\n  styletron: Styletron,\n  styleArg: StyleObject | (Props => StyleObject),\n) {\n  if (typeof styleArg === \"function\") {\n    return dynamicComposeShallow(styletron, styleArg);\n  }\n\n  return staticComposeShallow(styletron, styleArg);\n}\n\nfunction addExtension(composed, component, styleArg) {\n  return {\n    ...composed,\n    ext: {\n      with: styleArg,\n      name: component.displayName,\n      base: component.__STYLETRON__.base,\n      getInitialStyle: component.__STYLETRON__.reducers.length\n        ? component.__STYLETRON__.reducers[0].reducer\n        : component.__STYLETRON__.getInitialStyle,\n    },\n  };\n}\n\nexport function autoComposeDeep<Props>(\n  styletron: Styletron,\n  styleArg: StyleObject | (Props => StyleObject),\n) {\n  if (typeof styleArg === \"function\") {\n    return dynamicComposeDeep(styletron, styleArg);\n  }\n\n  return staticComposeDeep(styletron, styleArg);\n}\n\nexport function staticComposeShallow(styletron: Styletron, style: StyleObject) {\n  return composeStatic(styletron, createShallowMergeReducer(style));\n}\n\nexport function staticComposeDeep(styletron: Styletron, style: StyleObject) {\n  return composeStatic(styletron, createDeepMergeReducer(style));\n}\n\nexport function dynamicComposeShallow<Props>(\n  styletron: Styletron,\n  styleFn: Props => StyleObject,\n) {\n  return composeDynamic(styletron, (style, props) =>\n    shallowMerge(style, styleFn(props)),\n  );\n}\n\nexport function dynamicComposeDeep<Props>(\n  styletron: Styletron,\n  styleFn: Props => StyleObject,\n) {\n  return composeDynamic(styletron, (style, props) =>\n    deepMerge(style, styleFn(props)),\n  );\n}\n\nexport function createShallowMergeReducer(\n  style: StyleObject,\n): AssignmentCommutativeReducerContainer {\n  return {\n    reducer: inputStyle => shallowMerge(inputStyle, style),\n    assignmentCommutative: true,\n    factory: createShallowMergeReducer,\n    style: style,\n  };\n}\n\nexport function createDeepMergeReducer(\n  style: StyleObject,\n): AssignmentCommutativeReducerContainer {\n  return {\n    reducer: inputStyle => deepMerge(inputStyle, style),\n    assignmentCommutative: true,\n    factory: createDeepMergeReducer,\n    style: style,\n  };\n}\n\nexport function composeStatic(\n  styletron: Styletron,\n  reducerContainer: AssignmentCommutativeReducerContainer,\n) {\n  if (styletron.reducers.length === 0) {\n    const style = reducerContainer.reducer(styletron.getInitialStyle());\n    const result: Styletron = {\n      reducers: styletron.reducers,\n      base: styletron.base,\n      driver: styletron.driver,\n      wrapper: styletron.wrapper,\n      getInitialStyle: () => style,\n    };\n    if (__BROWSER__ && __DEV__) {\n      result.debug = styletron.debug;\n    }\n    return result;\n  } else {\n    const last = styletron.reducers[0];\n\n    if (\n      last.assignmentCommutative === true &&\n      reducerContainer.assignmentCommutative === true\n    ) {\n      const composed = reducerContainer.reducer(last.style);\n\n      const result: Styletron = {\n        getInitialStyle: styletron.getInitialStyle,\n        base: styletron.base,\n        driver: styletron.driver,\n        wrapper: styletron.wrapper,\n        reducers: [last.factory(composed)].concat(styletron.reducers.slice(1)),\n      };\n\n      if (__BROWSER__ && __DEV__) {\n        result.debug = styletron.debug;\n      }\n\n      return result;\n    }\n\n    return composeDynamic(styletron, reducerContainer.reducer);\n  }\n}\n\nexport function composeDynamic<Props>(\n  styletron: Styletron,\n  reducer: (StyleObject, Props) => StyleObject,\n) {\n  const composed: Styletron = {\n    getInitialStyle: styletron.getInitialStyle,\n    base: styletron.base,\n    driver: styletron.driver,\n    wrapper: styletron.wrapper,\n    reducers: [{assignmentCommutative: false, reducer}].concat(\n      styletron.reducers,\n    ),\n  };\n  if (__BROWSER__ && __DEV__) {\n    composed.debug = styletron.debug;\n  }\n  return composed;\n}\n\nexport function createStyledElementComponent(styletron: Styletron) {\n  const {reducers, base, driver, wrapper, getInitialStyle, ext} = styletron;\n\n  if (__BROWSER__ && __DEV__) {\n    var debugStackInfo, debugStackIndex;\n    if (styletron.debug) {\n      debugStackInfo = styletron.debug.stackInfo;\n      debugStackIndex = styletron.debug.stackIndex;\n    }\n  }\n\n  if (__BROWSER__ && __DEV__) {\n    var debugClassName;\n  }\n\n  const StyledElement = React.forwardRef((props, ref) => {\n    const styletron: StandardEngine = React.useContext(StyletronContext);\n    const debugEngine = React.useContext(DebugEngineContext);\n    const hydrating = React.useContext(HydrationContext);\n    checkNoopEngine(styletron);\n\n    const elementProps = omitPrefixedKeys(props);\n    let style = resolveStyle(getInitialStyle, reducers, props);\n\n    if (props.$style) {\n      if (typeof props.$style === \"function\") {\n        style = deepMerge(style, props.$style(props));\n      } else {\n        style = deepMerge(style, props.$style);\n      }\n    }\n\n    const styleClassString = driver(style, styletron);\n    const Element = props.$as ? props.$as : base;\n    elementProps.className = props.className\n      ? `${props.className} ${styleClassString}`\n      : styleClassString;\n\n    if (__BROWSER__ && __DEV__ && debugEngine && !hydrating) {\n      if (!debugClassName) {\n        debugClassName = debugEngine.debug({\n          stackInfo: debugStackInfo,\n          stackIndex: debugStackIndex,\n        });\n      }\n\n      const joined = `${debugClassName} ${elementProps.className}`;\n      elementProps.className = joined;\n    }\n\n    if (__BROWSER__ && __DEV__ && window.__STYLETRON_DEVTOOLS__) {\n      window.__STYLETRON_DEVTOOLS__.stylesMap.set(\n        elementProps.className,\n        style,\n      );\n      if (ext) {\n        window.__STYLETRON_DEVTOOLS__.extensionsMap.set(\n          elementProps.className,\n          {\n            base: ext.base,\n            displayName: ext.name,\n            initialStyles: ext.getInitialStyle({}, props),\n            styleOverrides:\n              typeof ext.with === \"function\" ? ext.with(props) : ext.with,\n          },\n        );\n      }\n    }\n\n    if (props.$ref) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        \"The prop `$ref` has been deprecated. Use `ref` instead. Refs are now forwarded with React.forwardRef.\",\n      );\n    }\n    return <Element {...elementProps} ref={ref || props.$ref} />;\n  });\n\n  const Wrapped = wrapper(StyledElement);\n  Wrapped.__STYLETRON__ = {\n    base,\n    reducers,\n    driver,\n    wrapper,\n    getInitialStyle,\n  };\n\n  if (__DEV__) {\n    let displayName;\n\n    if (typeof base === \"string\") {\n      displayName = base;\n    } else if (base.displayName) {\n      displayName = base.displayName;\n    } else if (base.name) {\n      displayName = base.name;\n    } else {\n      displayName = \"Unknown\";\n    }\n\n    Wrapped.displayName = `Styled(${displayName})`;\n  }\n\n  return Wrapped;\n}\n\n// Utility functions\n\nexport function resolveStyle(\n  getInitialStyle: void => StyleObject,\n  reducers: Array<ReducerContainer>,\n  props: Object,\n): StyleObject {\n  let result = getInitialStyle();\n  let i = reducers.length;\n  while (i--) {\n    // Cast to allow passing unused props param in case of static reducer\n    const reducer = (reducers[i].reducer: (StyleObject, Object) => StyleObject);\n    result = reducer(result, props);\n  }\n  return result;\n}\n\nfunction isObject(x: any) {\n  return typeof x === \"object\" && x !== null;\n}\n\nfunction omitPrefixedKeys(source) {\n  const result = {};\n\n  for (const key in source) {\n    if (key[0] !== \"$\") {\n      result[key] = source[key];\n    }\n  }\n\n  return result;\n}\n\nfunction deepMerge(a, b) {\n  const result = assign({}, a);\n\n  for (const key in b) {\n    const val = b[key];\n\n    if (isObject(val) && isObject(a[key])) {\n      result[key] = deepMerge(a[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  return result;\n}\n\nfunction shallowMerge(a, b) {\n  return assign(assign({}, a), b);\n}\n\nfunction assign(target, source) {\n  for (const key in source) {\n    target[key] = source[key];\n  }\n  return target;\n}\n"]},"metadata":{},"sourceType":"module"}